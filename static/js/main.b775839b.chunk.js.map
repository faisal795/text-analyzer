{"version":3,"sources":["components/About.jsx","components/Navbar.jsx","components/Textform.jsx","components/Alert.jsx","App.js","index.js"],"names":["About","MyStyle","backgroundColor","color","className","style","id","type","navStyle","padding","cursor","borderRadius","Navbar","props","mode","to","title","onClick","fun","htmlFor","textMode","placeholder","prototype","PropTypes","string","isRequired","defaultProps","Textform","SPACECOUNTER","useState","myText","setmyText","wordCounter","trim","split","filter","length","value","onChange","event","target","rows","disabled","newText","toUpperCase","toLowerCase","charAt","console","log","slice","navigator","clipboard","writeText","join","toFixed","Alert","height","marginTop","alert","role","width","xlinkHref","tp","msg","xmlns","display","fill","viewBox","d","App","Mode","setMode","ModeText","setModeText","myAlert","setmyAlert","showAlert","message","setTimeout","document","body","background","exact","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b775839b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction About() {\r\n  const MyStyle = {\r\n    backgroundColor: \"#01033be8\",\r\n    color: \"#fff\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container p-3 mt-4\" style={MyStyle}>\r\n        <h1>About Us</h1>\r\n        <div className=\"accordion p-3\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                style={MyStyle}\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                A SIMPLE AND FREE TEXT ANALYZER\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={MyStyle}>\r\n                <strong>A simple and free analyze your text.</strong> Text\r\n                Analyzer and TextUtils gives you to analyze your text quickly\r\n                and efficiently. Be it's CHARACTERS COUNT, WORDS COUNT,\r\n                SENTENCES COUNT, PARAGRAPH COUNT, MINUTS READ COUNT and\r\n                CHARACTERS WITHOUT SPACE COUNT.\r\n                <code> As a lecturer,</code> you can use this tool to ensure\r\n                your studentsâ€™ assignments are the correct length. overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                style={MyStyle}\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                OTHER USES : FREE TO USE\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={MyStyle}>\r\n                <strong>\r\n                  Text Analyzer and TextUtils services you can find on the Web.\r\n                </strong>\r\n                The word count is the number of words in a document or passage\r\n                of text. Word counting may be needed when a text is required to\r\n                stay within certain numbers of words. This may particularly be\r\n                the case in academia, legal proceedings, journalism and\r\n                advertising.\r\n                <code> word count tool</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                style={MyStyle}\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                ONLINE TEXT ANALYZER TOOL\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={MyStyle}>\r\n                <strong>Online Text Analyzer Tool.</strong> Sometimes we all\r\n                need to analyze whatever we have written, especially if you work\r\n                as a writer. You need to check and count characters, spaces,\r\n                words, sentences, and other things in your text to fulfill all\r\n                guidelines.\r\n                <code>Well, with our Text Analyzer tool</code>, this has never\r\n                been easier. All you need to do is paste your text into the\r\n                toolbox, and it will analyze the text for you.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingFour\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                style={MyStyle}\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseFour\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseFour\"\r\n              >\r\n                BROWSER COMPATIBLE TEXT-UTILS, TEXT-ANALYZER\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseFour\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingFour\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={MyStyle}>\r\n                <strong>\r\n                  cross-browser compatible extension Text Analyzer Tool.\r\n                </strong>\r\n                Count me up is a cross-browser compatible extension, which aims\r\n                to provide an intuitive and clean interface for word and\r\n                character counting. This is the lite version which provides only\r\n                the quick view functionality.\r\n                <code> respective web-stores Text Analyzer tool</code>, If you\r\n                want the full version you can find it here:\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst navStyle = {\r\n  padding: \"0 .7rem\",\r\n  cursor: \"pointer\",\r\n  borderRadius: \".4rem\",\r\n};\r\n\r\nfunction Navbar(props) {\r\n//   console.log(props.mode);\r\n//   const [Bgcolor, setBgcolor] = useState(null);\r\n// console.log(Bgcolor);\r\n// const BgChange = () => {\r\n//   if (props.mode === 'dark') {\r\n//     setBgcolor(\"#31ddffaf\");\r\n//   }\r\n    \r\n//   };\r\n//   const Bg2Change = () => {\r\n//     setBgcolor(\"#36bd7eb2\") \r\n//   };\r\n\r\n\r\n//   document.body.style.background = Bgcolor;\r\n\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <NavLink className=\"navbar-brand\" to=\"/text-analyzer\">\r\n            {props.title}\r\n          </NavLink>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  to=\"/about\"\r\n                >\r\n                  About\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item px-5\">\r\n                <span className=\"nav-link active\" aria-current=\"page\">\r\n                  <div className=\"form-check form-switch\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      id=\"checkbox\"\r\n                      onClick={() => {props.fun('#431818')}}\r\n                    />\r\n                    <label htmlFor=\"form-check-input\"></label>\r\n                    <label className=\"form-check-lable\" htmlFor=\"checkbox\">\r\n                      {props.textMode}\r\n                    </label>\r\n                  </div>\r\n                </span>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <span className=\"nav-link active\" aria-current=\"page\">\r\n                  <span\r\n                    className=\"mx-2 bg-info\"\r\n                    onClick={() => {props.fun('#31ddffaf')}}\r\n                    style={navStyle}\r\n                  ></span>\r\n                  <span\r\n                    className=\"mx-2 bg-success\"\r\n                    onClick={() => {props.fun('#36bd7eb2')}}\r\n                    style={navStyle}\r\n                  ></span>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"LOGO HERE\",\r\n};\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\n\r\n\r\nfunction Textform(props) {\r\n\r\n    const [myText, setmyText] = useState('');\r\n    // Convert the all text convertUppercase\r\n    function convertUppercase() {\r\n        let newText = myText.toUpperCase();\r\n        setmyText(newText);\r\n    }\r\n    // Convert the all text convertLowerCase\r\n    function convertLowerCase() {\r\n        let newText = myText.toLowerCase();\r\n        setmyText(newText);\r\n    }\r\n    // clear the All Text TextArea\r\n    function clearAllText() {\r\n        let newText = '';\r\n        setmyText(newText);\r\n    }\r\n    // capitalize the First Text\r\n    function capitalizeText() {\r\n        let firstchar = myText.charAt(0);\r\n        let newText = firstchar.toUpperCase();\r\n        console.log(newText + myText.slice(1));\r\n        setmyText(newText + myText.slice(1));\r\n    }\r\n    // copythe All Text to textArea\r\n    function copyText() {\r\n        // let textArea = document.querySelector('#myBox');\r\n        // textArea.select();\r\n        // textArea.setSelectionRange(0, 9999)\r\n        navigator.clipboard.writeText(myText);\r\n        // document.getSelection().removeAllRanges();\r\n        // alert(\"text copied successfully\");\r\n    }\r\n    // Remove All Extra Spaces \r\n    function removeSpaces() {\r\n        let newText = myText.split(/ [ ] + /);\r\n        setmyText(newText.join(' '));\r\n        // alert(\"Remove All Extra Spaces  successfully\");\r\n    };\r\n    // Call the onChangeHandler function\r\n    function onChangeHandler(event) {\r\n        setmyText(event.target.value);\r\n    }\r\n    let wordCounter = myText.trim().split(/\\s+/).filter((myText) => myText !== \"\").length;\r\n    let SPACECOUNTER; (wordCounter === 1) ? SPACECOUNTER = 0 : SPACECOUNTER = wordCounter;\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container py-4\">\r\n                <h2 className='text-warning text-center'>{props.title}</h2>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"myBox\" className={`form-label ${(props.textMode === 'DarkMode')? 'text-dark': 'text-light' }`}>Try Text Analyzer & TextUtils-word-Counter & Remove extra spaces!</label>\r\n                    <textarea className=\"form-control\" id=\"myBox\" placeholder='Enter your text here' value={myText} onChange={onChangeHandler} rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={myText.length < 1} className='btn btn-outline-success m-2' onClick={convertUppercase}>Uppercase Text</button>\r\n                <button disabled={myText.length < 1} className='btn btn-outline-info m-2' onClick={convertLowerCase}>LowerCase Text</button>\r\n                <button disabled={myText.length < 1} className='btn btn-outline-danger m-2' onClick={clearAllText}>Clear Text</button>\r\n                <button disabled={myText.length < 1} className='btn btn-outline-warning m-2' onClick={capitalizeText}>Firt chr Upper</button>\r\n                <button disabled={myText.length < 1} className='btn btn-outline-primary m-2' onClick={copyText}>Copy Text</button>\r\n                <button disabled={myText.length < 1} className='btn btn-outline-secondary m-2' onClick={removeSpaces}>Remove Extr Spaces</button>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <h3 className='text-center text-muted'>Your Text Summary</h3>\r\n                <div className=\"row text-white\">\r\n                    <div className=\"col m-1 bg-danger\"><p>CHARACTERS: <span>{myText.length}</span></p></div>\r\n                    <div className=\"col m-1 bg-warning\"><p>WORDS: <span>{SPACECOUNTER}</span></p></div>\r\n                    <div className=\"col m-1 bg-success\"><p>SENTENCES: <span>{myText.trim().split(\".\").filter((myText) => myText !== \"\").length}</span></p></div>\r\n                    <div className=\"col m-1 bg-secondary\"><p>MINUTS READ: <span>{(0.03 * SPACECOUNTER).toFixed(2)}</span></p></div>\r\n                    <div className=\"col m-1 bg-dark\"><p>CHARACTERS WITHOUT SPACE: <span>{myText.length - myText.split(\" \").length + 1}</span></p></div>\r\n                    <div className=\"col m-1 bg-info\"><p>PARAGRAPH: <span>{myText.split(/\\r?\\n|\\r/).filter((myText) => myText !== \"\").length}</span></p></div>\r\n                </div>\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-6\">\r\n\r\n\r\n                    </div>\r\n                    <div className=\"col-md-6\"></div>\r\n\r\n                </div>\r\n                <div className=\"row py-3\">\r\n                    <h3 className='text-center text-info'>Preview</h3>\r\n                    <div className=\"col\">\r\n                        <p className={`lead ${(props.textMode === 'DarkMode')? 'text-dark': 'text-light' }`}>{myText.length > 0 ? myText : 'Enter something in the above textarea and preview it here!'}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Textform;","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <>\r\n      <div style={{ height: \"3rem\", marginTop: '.7rem'}}>\r\n        {props.alert && (\r\n          <div className=\"container\">\r\n            <div\r\n              className=\"alert alert-success alert-dismissible fade show\"\r\n              role=\"alert\"\r\n            >\r\n              <svg\r\n                className=\"bi flex-shrink-0 me-2\"\r\n                width=\"24\"\r\n                height=\"24\"\r\n                role=\"img\"\r\n                aria-label=\"Success:\"\r\n              >\r\n                <use xlinkHref=\"#check-circle-fill\" />\r\n              </svg>\r\n              <strong>{props.alert.tp}</strong> : {props.alert.msg}\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ display: \"none\" }}>\r\n          <symbol\r\n            id=\"check-circle-fill\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n          </symbol>\r\n          <symbol id=\"info-fill\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\r\n          </symbol>\r\n          <symbol\r\n            id=\"exclamation-triangle-fill\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n          </symbol>\r\n        </svg>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\n\nimport { Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [Mode, setMode] = useState(\"light\");\n  const [ModeText, setModeText] = useState(\"DarkMode\");\n  const [myAlert, setmyAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setmyAlert({\n      msg: message,\n      tp: type,\n    });\n    setTimeout(() => {\n      setmyAlert(null);\n    }, 1200);\n  };\n\n  const Togglefun = (color) => {\n    console.log(color);\n    if (Mode === \"light\" && ModeText === \"DarkMode\") {\n      setMode(\"dark\");\n      setModeText(\"LightMode\");\n      showAlert(\"Dark Mode has been Enabled!\", \"Successfully!\");\n      \n      document.body.style.background = color;\n    } else {\n      setMode(\"light\");\n      setModeText(\"DarkMode\");\n      showAlert(\"Light Mode has been Enabled!\", \"Successfully!\");\n      document.body.style.background = \"#fff\";\n    }\n  };\n\n \n  return (\n    <>\n      <Navbar\n        title=\"TEXT-APP\"\n        mode={Mode}\n        fun={Togglefun}\n        textMode={ModeText}\n      ></Navbar>\n      <Alert alert={myAlert} />\n      <Routes>\n        <Route\n          exact\n          path=\"/text-analyzer\"\n          element={\n            <Textform\n              title=\"A simple and free text analyze and word counter\"\n              textMode={ModeText}\n            />\n          }\n        ></Route>\n        <Route exact path=\"/about\" element={<About />}></Route>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}